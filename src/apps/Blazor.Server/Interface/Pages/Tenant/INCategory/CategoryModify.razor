@page "/category/modify"
@page "/category/modify/{Id}"
@attribute [Authorize(Roles = "Customer")]

<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudCard Elevation="1" Style="padding: 20px;">
        <MudCardHeader>
            <CardHeaderContent>
                @if(Id == null)
                {
                    <MudText Typo="Typo.h6">Add Category</MudText>
                }
                else
                {
                    <MudText Typo="Typo.h6">Update Category</MudText>
                }
            </CardHeaderContent>
        </MudCardHeader>

        <MudCardContent>
            <MudTextField @bind-Value="model.CategoryCode" For="@(() => model.CategoryCode)" Label="Code" ReadOnly="Id is not null" />
            <MudTextField @bind-Value="model.CategoryDesc" For="@(() => model.CategoryDesc)" Label="Description" />
        </MudCardContent>

        <MudCardActions>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Outlined" Color="Color.Success">Save</MudButton>
            <MudButton OnClick="Cancel" Variant="Variant.Outlined" Color="Color.Error">Cancel</MudButton>
        </MudCardActions>
    </MudCard>
</EditForm>

@code {
    [Parameter] public string? Id { get; set; }
    private CategoryDto model = new();

    protected override async Task OnInitializedAsync()
    {
        if (Id != null)
        {
            model = await GetCategory();
        }
    }

    private async Task<CategoryDto> GetCategory()
    {
        var response = await _DataService.GetByIdAsync<CategoryWrapper<CategoryDto>>("category", Id!);
        return response.Data!.Category;
    }

    private async Task OnValidSubmit(EditContext context)
    {
        if (string.IsNullOrWhiteSpace(Id))
        {
            await _DataService.PostAsync("category", model);
        }
        else
        {
            await _DataService.PutAsync($"category", model);
        }

        _NavigationManager.NavigateTo("/category/index");
    }

    void Cancel()
    {
        _NavigationManager.NavigateTo("/category/index");
    }
}
